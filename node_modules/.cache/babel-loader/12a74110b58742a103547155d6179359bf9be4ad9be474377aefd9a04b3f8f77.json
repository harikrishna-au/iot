{"ast":null,"code":"var _jsxFileName = \"D:\\\\3-2\\\\IOT\\\\IOTLAB\\\\react-web-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const allCards = [\n  // Arduino Cards\n  {\n    id: \"a1\",\n    title: \"UltraSonic Sensor\",\n    type: \"arduino\",\n    code: `#include <WiFi.h>...`\n  }, {\n    id: \"a2\",\n    title: \"Analog Read\",\n    type: \"arduino\",\n    code: \"int sensorValue = analogRead(A0);\"\n  }, {\n    id: \"a3\",\n    title: \"Soil Moisture\",\n    type: \"arduino\",\n    code: \"...\"\n  }, {\n    id: \"a4\",\n    title: \"LED Web Server\",\n    type: \"arduino\",\n    code: \"...\"\n  }, {\n    id: \"a5\",\n    title: \"Digital Write\",\n    type: \"arduino\",\n    code: \"digitalWrite(7, HIGH);\"\n  },\n  // Raspberry Pi Cards\n  {\n    id: \"p1\",\n    title: \"Ultrasonic Sensor\",\n    type: \"raspberry-pi\",\n    code: `import RPi.GPIO as GPIO...`\n  }, {\n    id: \"p2\",\n    title: \"LED Control\",\n    type: \"raspberry-pi\",\n    code: \"from gpiozero import LED\"\n  }, {\n    id: \"p3\",\n    title: \"Button Input\",\n    type: \"raspberry-pi\",\n    code: \"from gpiozero import Button\"\n  }, {\n    id: \"p4\",\n    title: \"PWM Output\",\n    type: \"raspberry-pi\",\n    code: \"import RPi.GPIO as GPIO\"\n  }, {\n    id: \"p5\",\n    title: \"Servo Motor\",\n    type: \"raspberry-pi\",\n    code: \"...\"\n  }];\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    alert(\"Code copied!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"row-title\",\n        children: \"Code Examples\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-row\",\n        children: allCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${card.type}`,\n          onClick: () => handleCopy(card.code),\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","allCards","id","title","type","code","handleCopy","text","navigator","clipboard","writeText","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","onClick","_c","$RefreshReg$"],"sources":["D:/3-2/IOT/IOTLAB/react-web-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const allCards = [\n    // Arduino Cards\n    {\n      id: \"a1\",\n      title: \"UltraSonic Sensor\",\n      type: \"arduino\",\n      code: `#include <WiFi.h>...`\n    },\n    {\n      id: \"a2\",\n      title: \"Analog Read\",\n      type: \"arduino\",\n      code: \"int sensorValue = analogRead(A0);\"\n    },\n    {\n      id: \"a3\",\n      title: \"Soil Moisture\",\n      type: \"arduino\",\n      code: \"...\"\n    },\n    {\n      id: \"a4\",\n      title: \"LED Web Server\",\n      type: \"arduino\",\n      code: \"...\"\n    },\n    {\n      id: \"a5\",\n      title: \"Digital Write\",\n      type: \"arduino\",\n      code: \"digitalWrite(7, HIGH);\"\n    },\n    // Raspberry Pi Cards\n    {\n      id: \"p1\",\n      title: \"Ultrasonic Sensor\",\n      type: \"raspberry-pi\",\n      code: `import RPi.GPIO as GPIO...`\n    },\n    {\n      id: \"p2\",\n      title: \"LED Control\",\n      type: \"raspberry-pi\",\n      code: \"from gpiozero import LED\"\n    },\n    {\n      id: \"p3\",\n      title: \"Button Input\",\n      type: \"raspberry-pi\",\n      code: \"from gpiozero import Button\"\n    },\n    {\n      id: \"p4\",\n      title: \"PWM Output\",\n      type: \"raspberry-pi\",\n      code: \"import RPi.GPIO as GPIO\"\n    },\n    {\n      id: \"p5\",\n      title: \"Servo Motor\",\n      type: \"raspberry-pi\",\n      code: \"...\"\n    }\n  ];\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    alert(\"Code copied!\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h2 className=\"row-title\">Code Examples</h2>\n        <div className=\"cards-row\">\n          {allCards.map((card) => (\n            <div \n              key={card.id} \n              className={`card ${card.type}`} \n              onClick={() => handleCopy(card.code)}\n            >\n              <h3>{card.title}</h3>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}