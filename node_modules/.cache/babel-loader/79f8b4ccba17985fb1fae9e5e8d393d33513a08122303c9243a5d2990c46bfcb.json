{"ast":null,"code":"var _jsxFileName = \"D:\\\\3-2\\\\IOT\\\\IOTLAB\\\\react-web-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const allCards = [{\n    id: \"a1\",\n    title: \"US\",\n    type: \"arduino\",\n    code: `#include <WiFi.h>...`\n  }, {\n    id: \"a2\",\n    title: \"AR\",\n    type: \"arduino\",\n    code: \"int sensorValue = analogRead(A0);\"\n  }, {\n    id: \"a3\",\n    title: \"SM\",\n    type: \"arduino\",\n    code: \"...\"\n  }, {\n    id: \"a4\",\n    title: \"WS\",\n    type: \"arduino\",\n    code: \"...\"\n  }, {\n    id: \"a5\",\n    title: \"DW\",\n    type: \"arduino\",\n    code: \"digitalWrite(7, HIGH);\"\n  }, {\n    id: \"p1\",\n    title: \"US\",\n    type: \"raspberry-pi\",\n    code: `import RPi.GPIO as GPIO...`\n  }, {\n    id: \"p2\",\n    title: \"LED\",\n    type: \"raspberry-pi\",\n    code: \"from gpiozero import LED\"\n  }, {\n    id: \"p3\",\n    title: \"BTN\",\n    type: \"raspberry-pi\",\n    code: \"from gpiozero import Button\"\n  }, {\n    id: \"p4\",\n    title: \"PWM\",\n    type: \"raspberry-pi\",\n    code: \"import RPi.GPIO as GPIO\"\n  }, {\n    id: \"p5\",\n    title: \"SRV\",\n    type: \"raspberry-pi\",\n    code: \"...\"\n  }];\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-row\",\n      children: allCards.map(card => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `card ${card.type}`,\n        onClick: () => handleCopy(card.code),\n        children: card.title\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","allCards","id","title","type","code","handleCopy","text","navigator","clipboard","writeText","className","children","map","card","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/3-2/IOT/IOTLAB/react-web-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const allCards = [\n    {\n      id: \"a1\",\n      title: \"US\",\n      type: \"arduino\",\n      code: `#include <WiFi.h>...`\n    },\n    {\n      id: \"a2\",\n      title: \"AR\",\n      type: \"arduino\",\n      code: \"int sensorValue = analogRead(A0);\"\n    },\n    {\n      id: \"a3\",\n      title: \"SM\",\n      type: \"arduino\",\n      code: \"...\"\n    },\n    {\n      id: \"a4\",\n      title: \"WS\",\n      type: \"arduino\",\n      code: \"...\"\n    },\n    {\n      id: \"a5\",\n      title: \"DW\",\n      type: \"arduino\",\n      code: \"digitalWrite(7, HIGH);\"\n    },\n    {\n      id: \"p1\",\n      title: \"US\",\n      type: \"raspberry-pi\",\n      code: `import RPi.GPIO as GPIO...`\n    },\n    {\n      id: \"p2\",\n      title: \"LED\",\n      type: \"raspberry-pi\",\n      code: \"from gpiozero import LED\"\n    },\n    {\n      id: \"p3\",\n      title: \"BTN\",\n      type: \"raspberry-pi\",\n      code: \"from gpiozero import Button\"\n    },\n    {\n      id: \"p4\",\n      title: \"PWM\",\n      type: \"raspberry-pi\",\n      code: \"import RPi.GPIO as GPIO\"\n    },\n    {\n      id: \"p5\",\n      title: \"SRV\",\n      type: \"raspberry-pi\",\n      code: \"...\"\n    }\n  ];\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"cards-row\">\n        {allCards.map((card) => (\n          <span \n            key={card.id} \n            className={`card ${card.type}`} \n            onClick={() => handleCopy(card.code)}\n          >\n            {card.title}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,IAAI,CAAC;EACrC,CAAC;EAED,oBACER,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBb,OAAA;MAAKY,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBX,QAAQ,CAACY,GAAG,CAAEC,IAAI,iBACjBf,OAAA;QAEEY,SAAS,EAAE,QAAQG,IAAI,CAACV,IAAI,EAAG;QAC/BW,OAAO,EAAEA,CAAA,KAAMT,UAAU,CAACQ,IAAI,CAACT,IAAI,CAAE;QAAAO,QAAA,EAEpCE,IAAI,CAACX;MAAK,GAJNW,IAAI,CAACZ,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKR,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAnFIpB,GAAG;AAqFT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}